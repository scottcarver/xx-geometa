{"version":3,"file":"index.js","mappings":";;;;;;;;;;;;;;;;;;AAAsC;AACtC;AACA;AACA;AACkD;AAClD,mBAAmB,oDAAa,CAAC,sDAAG;AACpC;AACA;AACA,CAAC,EAAE,oDAAa,CAAC,uDAAI;AACrB;AACA,CAAC;AACD,iEAAe,UAAU,EAAC;AAC1B;;;;;;;;;;;;;;ACZA,MAAMA,UAAU,GAAG,yCAAyC;AAE5D,iEAAeA,UAAU;;;;;;;;;;ACFZ;;AAEb;;;;AAIA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,uBAAuB,UAAU;AACjC;AACA;AACA;;;;AAIA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,qBAAqB,UAAU;AAC/B;;AAEA,qBAAqB,UAAU;AAC/B;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;AC7CA;;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAqK;AAC5H;AACC;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,sBAAsB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,uBAAuB;AACrC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,2BAA2B,gDAAmB;AAC9C;AACA;AACA;AACA;AACA,0CAA0C,+CAAQ,GAAG;AACrD;AACA,4CAA4C;AAC5C;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,8BAA8B,+CAAQ;AACtC,8CAA8C,iDAAU;AACxD,sBAAsB;AACtB;AACA,KAAK;AACL,GAAG,IAAI;AACP,0BAA0B,8CAAO;AACjC,2BAA2B,8CAAO;AAClC;AACA;AACA,GAAG;AACH,wBAAwB,kDAAW;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH,EAAE,gDAAS;AACX;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,oGAAoG;AACpG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,IAAI;AACJ,uBAAuB,8CAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,sBAAsB,gDAAmB;AACzC;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,gDAAS;AACb;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc,6CAAM;AACpB,uBAAuB,4CAAW;AAClC;AACA;AACA;AACA,EAAE,gDAAS;AACX;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA,yBAAyB,iDAAU;AACnC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,EAAE,sDAAe;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,sDAAe;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,gDAAmB;AACzC;AACA,GAAG,eAAe,gDAAmB,iDAAiD,gDAAmB,sIAAsI,gDAAmB;AAClQ;;AAEA;AACA,sBAAsB,+CAAQ;AAC9B,cAAc,kDAAW;AACzB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0BAA0B,iDAAU;AACpC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,6CAAM;AACpB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,EAAE,gDAAS;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,+CAAQ;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,6CAAM;AACjC;AACA,EAAE,gDAAS;AACX;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,0BAA0B,gDAAmB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,kBAAkB,iDAAU;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,gDAAS;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,8CAAO;AAC/B;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,EAAE,sDAAe;AACjB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH,wBAAwB,8CAAO;AAC/B;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,uBAAuB,8CAAO;AAC9B;AACA,GAAG;AACH;AACA,wBAAwB,gDAAmB;AAC3C;AACA;AACA,OAAO,iBAAiB;AACxB;AACA,KAAK,eAAe,gDAAmB;AACvC;AACA,sBAAsB,gDAAmB;AACzC;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,IAAI,IAAI,sBAAsB,gDAAmB;AACjD;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,iDAAU;AACxB;AACA;AACA,IAAI,EAAE,iDAAU;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,iDAAU;AACxB,EAAE,gDAAS;AACX;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA,iIAAiI,8BAA8B;AAC/J;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,gDAAS;AACX;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,gDAAS;AACX;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,gDAAmB;AACjD;AACA,8BAA8B,+CAAQ;AACtC,kDAAkD,+CAAQ;AAC1D,uBAAuB,6CAAM;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,sBAAsB,2CAAQ;AAC9B;AACA,EAAE,gDAAS;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,EAAE,gDAAS;AACX;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,gDAAS;AACX;AACA,iEAAiE,wEAAwE;AACzI,GAAG;AACH;AACA;AACA,EAAE,gDAAS;AACX;AACA,iEAAiE,6CAA6C;AAC9G,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,iDAAU;AACjC;AACA;AACA,IAAI;AACJ;AACA,qCAAqC,8CAAO;AAC5C;AACA,IAAI;AACJ,EAAE,0DAAmB;AACrB;AACA,sBAAsB,gDAAmB;AACzC;AACA,GAAG,EAAE,uDAAY;AACjB,CAAC;AACD;AACA,8BAA8B,+CAAQ;AACtC,sBAAsB,kDAAW;AACjC;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,sCAAsC,+CAAQ;AAC9C,kDAAkD,+CAAQ;AAC1D,EAAE,gDAAS;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,6CAAM;AAC7B,EAAE,gDAAS;AACX;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,gDAAS;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,sBAAsB,gDAAmB,CAAC,2CAAc,qCAAqC,uDAAY;AACzG;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,2BAA2B,8CAAO;AAClC;AACA,EAAE,gDAAS;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,SAAS,uDAAY;AACrB;;AAEA;AACA;AACA,8BAA8B,+CAAQ;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,EAAE,gDAAS;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,EAAE,gDAAS;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,EAAE,gDAAS;AACX;AACA;AACA,GAAG;AACH;AACA,EAAE,gDAAS;AACX;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,eAAe,iDAAU;AACzB;AACA,EAAE,0DAAmB;AACrB,sBAAsB,gDAAmB,CAAC,2CAAc;AACxD,CAAC;AACD;AACA,8BAA8B,+CAAQ;AACtC,sBAAsB,kDAAW;AACjC;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,wCAAwC,iDAAU;AAClD,yBAAyB,8CAAO;AAChC;AACA,EAAE,gDAAS;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,2CAAQ;AAChB;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,SAAS,uDAAY;AACrB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,oBA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","sources":["webpack://@block-development-examples/post-meta-modal-2502fb/./node_modules/@wordpress/icons/build-module/library/plus-circle.js","webpack://@block-development-examples/post-meta-modal-2502fb/./src/secrets.js","webpack://@block-development-examples/post-meta-modal-2502fb/./node_modules/fast-deep-equal/index.js","webpack://@block-development-examples/post-meta-modal-2502fb/./src/index.scss","webpack://@block-development-examples/post-meta-modal-2502fb/external window \"React\"","webpack://@block-development-examples/post-meta-modal-2502fb/external window \"ReactDOM\"","webpack://@block-development-examples/post-meta-modal-2502fb/external window [\"wp\",\"commands\"]","webpack://@block-development-examples/post-meta-modal-2502fb/external window [\"wp\",\"components\"]","webpack://@block-development-examples/post-meta-modal-2502fb/external window [\"wp\",\"coreData\"]","webpack://@block-development-examples/post-meta-modal-2502fb/external window [\"wp\",\"data\"]","webpack://@block-development-examples/post-meta-modal-2502fb/external window [\"wp\",\"editPost\"]","webpack://@block-development-examples/post-meta-modal-2502fb/external window [\"wp\",\"element\"]","webpack://@block-development-examples/post-meta-modal-2502fb/external window [\"wp\",\"i18n\"]","webpack://@block-development-examples/post-meta-modal-2502fb/external window [\"wp\",\"plugins\"]","webpack://@block-development-examples/post-meta-modal-2502fb/external window [\"wp\",\"primitives\"]","webpack://@block-development-examples/post-meta-modal-2502fb/./node_modules/@vis.gl/react-google-maps/dist/index.modern.mjs","webpack://@block-development-examples/post-meta-modal-2502fb/webpack/bootstrap","webpack://@block-development-examples/post-meta-modal-2502fb/webpack/runtime/compat get default export","webpack://@block-development-examples/post-meta-modal-2502fb/webpack/runtime/define property getters","webpack://@block-development-examples/post-meta-modal-2502fb/webpack/runtime/hasOwnProperty shorthand","webpack://@block-development-examples/post-meta-modal-2502fb/webpack/runtime/make namespace object","webpack://@block-development-examples/post-meta-modal-2502fb/./src/index.js"],"sourcesContent":["import { createElement } from \"react\";\n/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\nconst plusCircle = createElement(SVG, {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  viewBox: \"-2 -2 24 24\"\n}, createElement(Path, {\n  d: \"M10 1c-5 0-9 4-9 9s4 9 9 9 9-4 9-9-4-9-9-9zm0 16c-3.9 0-7-3.1-7-7s3.1-7 7-7 7 3.1 7 7-3.1 7-7 7zm1-11H9v3H6v2h3v3h2v-3h3V9h-3V6zM10 1c-5 0-9 4-9 9s4 9 9 9 9-4 9-9-4-9-9-9zm0 16c-3.9 0-7-3.1-7-7s3.1-7 7-7 7 3.1 7 7-3.1 7-7 7zm1-11H9v3H6v2h3v3h2v-3h3V9h-3V6z\"\n}));\nexport default plusCircle;\n//# sourceMappingURL=plus-circle.js.map","const secret_key = \"AIzaSyDKJA7jiGnkG_gR5HE6iXEdK2fmwU5_xiw\";\n\nexport default secret_key;","'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n","// extracted by mini-css-extract-plugin\nexport {};","module.exports = window[\"React\"];","module.exports = window[\"ReactDOM\"];","module.exports = window[\"wp\"][\"commands\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"coreData\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"editPost\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","module.exports = window[\"wp\"][\"plugins\"];","module.exports = window[\"wp\"][\"primitives\"];","import React, { useMemo, useState, useReducer, useCallback, useEffect, useRef, useContext, useLayoutEffect, forwardRef, useImperativeHandle, Children } from 'react';\nimport { createPortal } from 'react-dom';\nimport isDeepEqual from 'fast-deep-equal';\n\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : String(i);\n}\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\n\nconst APILoadingStatus = {\n  NOT_LOADED: 'NOT_LOADED',\n  LOADING: 'LOADING',\n  LOADED: 'LOADED',\n  FAILED: 'FAILED',\n  AUTH_FAILURE: 'AUTH_FAILURE'\n};\n\nconst MAPS_API_BASE_URL = 'https://maps.googleapis.com/maps/api/js';\n/**\n * A GoogleMapsApiLoader to reliably load and unload the Google Maps JavaScript API.\n *\n * The actual loading and unloading is delayed into the microtask queue, to\n * allow using the API in an useEffect hook, without worrying about multiple API loads.\n */\nclass GoogleMapsApiLoader {\n  /**\n   * Loads the Maps JavaScript API with the specified parameters.\n   * Since the Maps library can only be loaded once per page, this will\n   * produce a warning when called multiple times with different\n   * parameters.\n   *\n   * The returned promise resolves when loading completes\n   * and rejects in case of an error or when the loading was aborted.\n   */\n  static async load(params, onLoadingStatusChange) {\n    var _window$google;\n    const libraries = params.libraries ? params.libraries.split(',') : [];\n    const serializedParams = this.serializeParams(params);\n    this.listeners.push(onLoadingStatusChange);\n    // Note: if `google.maps.importLibrary` has been defined externally, we\n    //   assume that loading is complete and successful.\n    //   If it was defined by a previous call to this method, a warning\n    //   message is logged if there are differences in api-parameters used\n    //   for both calls.\n    if ((_window$google = window.google) != null && (_window$google = _window$google.maps) != null && _window$google.importLibrary) {\n      // no serialized parameters means it was loaded externally\n      if (!this.serializedApiParams) {\n        this.loadingStatus = APILoadingStatus.LOADED;\n      }\n      this.notifyLoadingStatusListeners();\n    } else {\n      this.serializedApiParams = serializedParams;\n      this.initImportLibrary(params);\n    }\n    if (this.serializedApiParams && this.serializedApiParams !== serializedParams) {\n      console.warn(`[google-maps-api-loader] The maps API has already been loaded ` + `with different parameters and will not be loaded again. Refresh the ` + `page for new values to have effect.`);\n    }\n    const librariesToLoad = ['maps', ...libraries];\n    await Promise.all(librariesToLoad.map(name => google.maps.importLibrary(name)));\n  }\n  /**\n   * Serialize the paramters used to load the library for easier comparison.\n   */\n  static serializeParams(params) {\n    return [params.v, params.key, params.language, params.region, params.authReferrerPolicy, params.solutionChannel].join('/');\n  }\n  /**\n   * Creates the global `google.maps.importLibrary` function for bootstrapping.\n   * This is essentially a formatted version of the dynamic loading script\n   * from the official documentation with some minor adjustments.\n   *\n   * The created importLibrary function will load the Google Maps JavaScript API,\n   * which will then replace the `google.maps.importLibrary` function with the full\n   * implementation.\n   *\n   * @see https://developers.google.com/maps/documentation/javascript/load-maps-js-api#dynamic-library-import\n   */\n  static initImportLibrary(params) {\n    if (!window.google) window.google = {};\n    if (!window.google.maps) window.google.maps = {};\n    if (window.google.maps['importLibrary']) {\n      console.error('[google-maps-api-loader-internal]: initImportLibrary must only be called once');\n      return;\n    }\n    let apiPromise = null;\n    const loadApi = () => {\n      if (apiPromise) return apiPromise;\n      apiPromise = new Promise((resolve, reject) => {\n        var _document$querySelect;\n        const scriptElement = document.createElement('script');\n        const urlParams = new URLSearchParams();\n        for (const [key, value] of Object.entries(params)) {\n          const urlParamName = key.replace(/[A-Z]/g, t => '_' + t[0].toLowerCase());\n          urlParams.set(urlParamName, value);\n        }\n        urlParams.set('loading', 'async');\n        urlParams.set('callback', '__googleMapsCallback__');\n        scriptElement.async = true;\n        scriptElement.src = MAPS_API_BASE_URL + `?` + urlParams.toString();\n        scriptElement.nonce = ((_document$querySelect = document.querySelector('script[nonce]')) == null ? void 0 : _document$querySelect.nonce) || '';\n        scriptElement.onerror = () => {\n          this.loadingStatus = APILoadingStatus.FAILED;\n          this.notifyLoadingStatusListeners();\n          reject(new Error('The Google Maps JavaScript API could not load.'));\n        };\n        window.__googleMapsCallback__ = () => {\n          this.loadingStatus = APILoadingStatus.LOADED;\n          this.notifyLoadingStatusListeners();\n          resolve();\n        };\n        window.gm_authFailure = () => {\n          this.loadingStatus = APILoadingStatus.AUTH_FAILURE;\n          this.notifyLoadingStatusListeners();\n        };\n        this.loadingStatus = APILoadingStatus.LOADING;\n        this.notifyLoadingStatusListeners();\n        document.head.append(scriptElement);\n      });\n      return apiPromise;\n    };\n    // for the first load, we declare an importLibrary function that will\n    // be overwritten once the api is loaded.\n    google.maps.importLibrary = libraryName => loadApi().then(() => google.maps.importLibrary(libraryName));\n  }\n  /**\n   * Calls all registered loadingStatusListeners after a status update.\n   */\n  static notifyLoadingStatusListeners() {\n    for (const fn of this.listeners) {\n      fn(this.loadingStatus);\n    }\n  }\n}\n/**\n * The current loadingStatus of the API.\n */\nGoogleMapsApiLoader.loadingStatus = APILoadingStatus.NOT_LOADED;\n/**\n * The parameters used for first loading the API.\n */\nGoogleMapsApiLoader.serializedApiParams = void 0;\n/**\n * A list of functions to be notified when the loading status changes.\n */\nGoogleMapsApiLoader.listeners = [];\n\nconst _excluded$3 = [\"onLoad\", \"apiKey\", \"version\", \"libraries\"],\n  _excluded2 = [\"children\"];\nconst DEFAULT_SOLUTION_CHANNEL = 'GMP_VISGL_react';\nconst APIProviderContext = React.createContext(null);\n/**\n * local hook to set up the map-instance management context.\n */\nfunction useMapInstances() {\n  const [mapInstances, setMapInstances] = useState({});\n  const addMapInstance = (mapInstance, id = 'default') => {\n    setMapInstances(instances => _extends({}, instances, {\n      [id]: mapInstance\n    }));\n  };\n  const removeMapInstance = (id = 'default') => {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    setMapInstances(_ref => {\n      let remaining = _objectWithoutPropertiesLoose(_ref, [id].map(_toPropertyKey));\n      return remaining;\n    });\n  };\n  const clearMapInstances = () => {\n    setMapInstances({});\n  };\n  return {\n    mapInstances,\n    addMapInstance,\n    removeMapInstance,\n    clearMapInstances\n  };\n}\n/**\n * local hook to handle the loading of the maps API, returns the current loading status\n * @param props\n */\nfunction useGoogleMapsApiLoader(props) {\n  const {\n      onLoad,\n      apiKey,\n      version,\n      libraries = []\n    } = props,\n    otherApiParams = _objectWithoutPropertiesLoose(props, _excluded$3);\n  const [status, setStatus] = useState(GoogleMapsApiLoader.loadingStatus);\n  const [loadedLibraries, addLoadedLibrary] = useReducer((loadedLibraries, action) => {\n    return _extends({}, loadedLibraries, {\n      [action.name]: action.value\n    });\n  }, {});\n  const librariesString = useMemo(() => libraries == null ? void 0 : libraries.join(','), [libraries]);\n  const serializedParams = useMemo(() => JSON.stringify(_extends({\n    apiKey,\n    version\n  }, otherApiParams)), [apiKey, version, otherApiParams]);\n  const importLibrary = useCallback(async name => {\n    var _google;\n    if (loadedLibraries[name]) {\n      return loadedLibraries[name];\n    }\n    if (!((_google = google) != null && (_google = _google.maps) != null && _google.importLibrary)) {\n      throw new Error('[api-provider-internal] importLibrary was called before ' + 'google.maps.importLibrary was defined.');\n    }\n    const res = await window.google.maps.importLibrary(name);\n    addLoadedLibrary({\n      name,\n      value: res\n    });\n    return res;\n  }, [loadedLibraries]);\n  useEffect(() => {\n    (async () => {\n      try {\n        const params = _extends({\n          key: apiKey\n        }, otherApiParams);\n        if (version) params.v = version;\n        if ((librariesString == null ? void 0 : librariesString.length) > 0) params.libraries = librariesString;\n        if (params.solutionChannel === undefined) params.solutionChannel = DEFAULT_SOLUTION_CHANNEL;else if (params.solutionChannel === '') delete params.solutionChannel;\n        await GoogleMapsApiLoader.load(params, status => setStatus(status));\n        for (const name of ['core', 'maps', ...libraries]) {\n          await importLibrary(name);\n        }\n        if (onLoad) {\n          onLoad();\n        }\n      } catch (error) {\n        console.error('<ApiProvider> failed to load the Google Maps JavaScript API', error);\n      }\n    })();\n  },\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  [apiKey, librariesString, serializedParams]);\n  return {\n    status,\n    loadedLibraries,\n    importLibrary\n  };\n}\n/**\n * Component to wrap the components from this library and load the Google Maps JavaScript API\n */\nconst APIProvider = props => {\n  const {\n      children\n    } = props,\n    loaderProps = _objectWithoutPropertiesLoose(props, _excluded2);\n  const {\n    mapInstances,\n    addMapInstance,\n    removeMapInstance,\n    clearMapInstances\n  } = useMapInstances();\n  const {\n    status,\n    loadedLibraries,\n    importLibrary\n  } = useGoogleMapsApiLoader(loaderProps);\n  const contextValue = useMemo(() => ({\n    mapInstances,\n    addMapInstance,\n    removeMapInstance,\n    clearMapInstances,\n    status,\n    loadedLibraries,\n    importLibrary\n  }), [mapInstances, addMapInstance, removeMapInstance, clearMapInstances, status, loadedLibraries, importLibrary]);\n  return /*#__PURE__*/React.createElement(APIProviderContext.Provider, {\n    value: contextValue\n  }, children);\n};\n\n/**\n * Sets up effects to bind event-handlers for all event-props in MapEventProps.\n * @internal\n */\nfunction useMapEvents(map, props) {\n  // note: calling a useEffect hook from within a loop is prohibited by the\n  // rules of hooks, but it's ok here since it's unconditional and the number\n  // and order of iterations is always strictly the same.\n  // (see https://legacy.reactjs.org/docs/hooks-rules.html)\n  for (const propName of eventPropNames) {\n    // fixme: this cast is essentially a 'trust me, bro' for typescript, but\n    //   a proper solution seems way too complicated right now\n    const handler = props[propName];\n    const eventType = propNameToEventType[propName];\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useEffect(() => {\n      if (!map) return;\n      if (!handler) return;\n      const listener = google.maps.event.addListener(map, eventType, ev => {\n        handler(createMapEvent(eventType, map, ev));\n      });\n      return () => listener.remove();\n    }, [map, eventType, handler]);\n  }\n}\n/**\n * Create the wrapped map-events used for the event-props.\n * @param type the event type as it is specified to the maps api\n * @param map the map instance the event originates from\n * @param srcEvent the source-event if there is one.\n */\nfunction createMapEvent(type, map, srcEvent) {\n  const ev = {\n    type,\n    map,\n    detail: {},\n    stoppable: false,\n    stop: () => {}\n  };\n  if (cameraEventTypes.includes(type)) {\n    const camEvent = ev;\n    const center = map.getCenter();\n    const zoom = map.getZoom();\n    const heading = map.getHeading() || 0;\n    const tilt = map.getTilt() || 0;\n    const bounds = map.getBounds();\n    if (!center || !bounds || !Number.isFinite(zoom)) {\n      console.warn('[createEvent] at least one of the values from the map ' + 'returned undefined. This is not expected to happen. Please ' + 'report an issue at https://github.com/visgl/react-google-maps/issues/new');\n    }\n    camEvent.detail = {\n      center: (center == null ? void 0 : center.toJSON()) || {\n        lat: 0,\n        lng: 0\n      },\n      zoom: zoom || 0,\n      heading: heading,\n      tilt: tilt,\n      bounds: (bounds == null ? void 0 : bounds.toJSON()) || {\n        north: 90,\n        east: 180,\n        south: -90,\n        west: -180\n      }\n    };\n    return camEvent;\n  } else if (mouseEventTypes.includes(type)) {\n    var _srcEvent$latLng;\n    if (!srcEvent) throw new Error('[createEvent] mouse events must provide a srcEvent');\n    const mouseEvent = ev;\n    mouseEvent.domEvent = srcEvent.domEvent;\n    mouseEvent.stoppable = true;\n    mouseEvent.stop = () => srcEvent.stop();\n    mouseEvent.detail = {\n      latLng: ((_srcEvent$latLng = srcEvent.latLng) == null ? void 0 : _srcEvent$latLng.toJSON()) || null,\n      placeId: srcEvent.placeId\n    };\n    return mouseEvent;\n  }\n  return ev;\n}\n/**\n * maps the camelCased names of event-props to the corresponding event-types\n * used in the maps API.\n */\nconst propNameToEventType = {\n  onBoundsChanged: 'bounds_changed',\n  onCenterChanged: 'center_changed',\n  onClick: 'click',\n  onContextmenu: 'contextmenu',\n  onDblclick: 'dblclick',\n  onDrag: 'drag',\n  onDragend: 'dragend',\n  onDragstart: 'dragstart',\n  onHeadingChanged: 'heading_changed',\n  onIdle: 'idle',\n  onIsFractionalZoomEnabledChanged: 'isfractionalzoomenabled_changed',\n  onMapCapabilitiesChanged: 'mapcapabilities_changed',\n  onMapTypeIdChanged: 'maptypeid_changed',\n  onMousemove: 'mousemove',\n  onMouseout: 'mouseout',\n  onMouseover: 'mouseover',\n  onProjectionChanged: 'projection_changed',\n  onRenderingTypeChanged: 'renderingtype_changed',\n  onTilesLoaded: 'tilesloaded',\n  onTiltChanged: 'tilt_changed',\n  onZoomChanged: 'zoom_changed',\n  // note: onCameraChanged is an alias for the bounds_changed event,\n  // since that is going to be fired in every situation where the camera is\n  // updated.\n  onCameraChanged: 'bounds_changed'\n};\nconst cameraEventTypes = ['bounds_changed', 'center_changed', 'heading_changed', 'tilt_changed', 'zoom_changed'];\nconst mouseEventTypes = ['click', 'contextmenu', 'dblclick', 'mousemove', 'mouseout', 'mouseover'];\nconst eventPropNames = Object.keys(propNameToEventType);\n\nfunction useDeepCompareEffect(effect, deps) {\n  const ref = useRef(undefined);\n  if (!ref.current || !isDeepEqual(deps, ref.current)) {\n    ref.current = deps;\n  }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(effect, ref.current);\n}\n\nconst mapOptionKeys = new Set(['backgroundColor', 'clickableIcons', 'controlSize', 'disableDefaultUI', 'disableDoubleClickZoom', 'draggable', 'draggableCursor', 'draggingCursor', 'fullscreenControl', 'fullscreenControlOptions', 'gestureHandling', 'isFractionalZoomEnabled', 'keyboardShortcuts', 'mapTypeControl', 'mapTypeControlOptions', 'mapTypeId', 'maxZoom', 'minZoom', 'noClear', 'panControl', 'panControlOptions', 'restriction', 'rotateControl', 'rotateControlOptions', 'scaleControl', 'scaleControlOptions', 'scrollwheel', 'streetView', 'streetViewControl', 'streetViewControlOptions', 'styles', 'zoomControl', 'zoomControlOptions']);\n/**\n * Internal hook to update the map-options when props are changed.\n *\n * @param map the map instance\n * @param mapProps the props to update the map-instance with\n * @internal\n */\nfunction useMapOptions(map, mapProps) {\n  /* eslint-disable react-hooks/exhaustive-deps --\n   *\n   * The following effects aren't triggered when the map is changed.\n   * In that case, the values will be or have been passed to the map\n   * constructor via mapOptions.\n   */\n  const mapOptions = {};\n  const keys = Object.keys(mapProps);\n  for (const key of keys) {\n    if (!mapOptionKeys.has(key)) continue;\n    mapOptions[key] = mapProps[key];\n  }\n  // update the map options when mapOptions is changed\n  // Note: due to the destructuring above, mapOptions will be seen as changed\n  //   with every re-render, so we're assuming the maps-api will properly\n  //   deal with unchanged option-values passed into setOptions.\n  useDeepCompareEffect(() => {\n    if (!map) return;\n    map.setOptions(mapOptions);\n  }, [mapOptions]);\n  /* eslint-enable react-hooks/exhaustive-deps */\n}\n\nfunction useApiLoadingStatus() {\n  var _useContext;\n  return ((_useContext = useContext(APIProviderContext)) == null ? void 0 : _useContext.status) || APILoadingStatus.NOT_LOADED;\n}\n\n/**\n * Internal hook that updates the camera when deck.gl viewState changes.\n * @internal\n */\nfunction useDeckGLCameraUpdate(map, props) {\n  const {\n    viewport,\n    viewState\n  } = props;\n  const isDeckGlControlled = !!viewport;\n  useLayoutEffect(() => {\n    if (!map || !viewState) return;\n    const {\n      latitude,\n      longitude,\n      bearing: heading,\n      pitch: tilt,\n      zoom\n    } = viewState;\n    map.moveCamera({\n      center: {\n        lat: latitude,\n        lng: longitude\n      },\n      heading,\n      tilt,\n      zoom: zoom + 1\n    });\n  }, [map, viewState]);\n  return isDeckGlControlled;\n}\n\nfunction isLatLngLiteral(obj) {\n  if (!obj || typeof obj !== 'object') return false;\n  if (!('lat' in obj && 'lng' in obj)) return false;\n  return Number.isFinite(obj.lat) && Number.isFinite(obj.lng);\n}\nfunction latLngEquals(a, b) {\n  if (!a || !b) return false;\n  const A = toLatLngLiteral(a);\n  const B = toLatLngLiteral(b);\n  if (A.lat !== B.lat || A.lng !== B.lng) return false;\n  return true;\n}\nfunction toLatLngLiteral(obj) {\n  if (isLatLngLiteral(obj)) return obj;\n  return obj.toJSON();\n}\n\nfunction useMapCameraParams(map, cameraStateRef, mapProps) {\n  const center = mapProps.center ? toLatLngLiteral(mapProps.center) : null;\n  let lat = null;\n  let lng = null;\n  if (center && Number.isFinite(center.lat) && Number.isFinite(center.lng)) {\n    lat = center.lat;\n    lng = center.lng;\n  }\n  const zoom = Number.isFinite(mapProps.zoom) ? mapProps.zoom : null;\n  const heading = Number.isFinite(mapProps.heading) ? mapProps.heading : null;\n  const tilt = Number.isFinite(mapProps.tilt) ? mapProps.tilt : null;\n  // the following effect runs for every render of the map component and checks\n  // if there are differences between the known state of the map instance\n  // (cameraStateRef, which is updated by all bounds_changed events) and the\n  // desired state in the props.\n  useLayoutEffect(() => {\n    if (!map) return;\n    const nextCamera = {};\n    let needsUpdate = false;\n    if (lat !== null && lng !== null && (cameraStateRef.current.center.lat !== lat || cameraStateRef.current.center.lng !== lng)) {\n      nextCamera.center = {\n        lat,\n        lng\n      };\n      needsUpdate = true;\n    }\n    if (zoom !== null && cameraStateRef.current.zoom !== zoom) {\n      nextCamera.zoom = zoom;\n      needsUpdate = true;\n    }\n    if (heading !== null && cameraStateRef.current.heading !== heading) {\n      nextCamera.heading = heading;\n      needsUpdate = true;\n    }\n    if (tilt !== null && cameraStateRef.current.tilt !== tilt) {\n      nextCamera.tilt = tilt;\n      needsUpdate = true;\n    }\n    if (needsUpdate) {\n      map.moveCamera(nextCamera);\n    }\n  });\n}\n\nconst AuthFailureMessage = () => {\n  const style = {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    bottom: 0,\n    right: 0,\n    zIndex: 999,\n    display: 'flex',\n    flexFlow: 'column nowrap',\n    textAlign: 'center',\n    justifyContent: 'center',\n    fontSize: '.8rem',\n    color: 'rgba(0,0,0,0.6)',\n    background: '#dddddd',\n    padding: '1rem 1.5rem'\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: style\n  }, /*#__PURE__*/React.createElement(\"h2\", null, \"Error: AuthFailure\"), /*#__PURE__*/React.createElement(\"p\", null, \"A problem with your API key prevents the map from rendering correctly. Please make sure the value of the \", /*#__PURE__*/React.createElement(\"code\", null, \"APIProvider.apiKey\"), \" prop is correct. Check the error-message in the console for further details.\"));\n};\n\nfunction useCallbackRef() {\n  const [el, setEl] = useState(null);\n  const ref = useCallback(value => setEl(value), [setEl]);\n  return [el, ref];\n}\n\n/**\n * Hook to check if the Maps JavaScript API is loaded\n */\nfunction useApiIsLoaded() {\n  const status = useApiLoadingStatus();\n  return status === APILoadingStatus.LOADED;\n}\n\nfunction useForceUpdate() {\n  const [, forceUpdate] = useReducer(x => x + 1, 0);\n  return forceUpdate;\n}\n\nfunction handleBoundsChange(map, ref) {\n  const center = map.getCenter();\n  const zoom = map.getZoom();\n  const heading = map.getHeading() || 0;\n  const tilt = map.getTilt() || 0;\n  const bounds = map.getBounds();\n  if (!center || !bounds || !Number.isFinite(zoom)) {\n    console.warn('[useTrackedCameraState] at least one of the values from the map ' + 'returned undefined. This is not expected to happen. Please ' + 'report an issue at https://github.com/visgl/react-google-maps/issues/new');\n  }\n  // fixme: do we need the `undefined` cases for the camera-params? When are they used in the maps API?\n  Object.assign(ref.current, {\n    center: (center == null ? void 0 : center.toJSON()) || {\n      lat: 0,\n      lng: 0\n    },\n    zoom: zoom || 0,\n    heading: heading,\n    tilt: tilt\n  });\n}\n/**\n * Creates a mutable ref object to track the last known state of the map camera.\n * This is used in `useMapCameraParams` to reduce stuttering in normal operation\n * by avoiding updates of the map camera with values that have already been processed.\n */\nfunction useTrackedCameraStateRef(map) {\n  const forceUpdate = useForceUpdate();\n  const ref = useRef({\n    center: {\n      lat: 0,\n      lng: 0\n    },\n    heading: 0,\n    tilt: 0,\n    zoom: 0\n  });\n  // Record camera state with every bounds_changed event dispatched by the map.\n  // This data is used to prevent feeding these values back to the\n  // map-instance when a typical \"controlled component\" setup (state variable is\n  // fed into and updated by the map).\n  useEffect(() => {\n    if (!map) return;\n    const listener = google.maps.event.addListener(map, 'bounds_changed', () => {\n      handleBoundsChange(map, ref);\n      // When an event is occured, we have to update during the next cycle.\n      // The application could decide to ignore the event and not update any\n      // camera props of the map, meaning that in that case we will have to\n      // 'undo' the change to the camera.\n      forceUpdate();\n    });\n    return () => listener.remove();\n  }, [map, forceUpdate]);\n  return ref;\n}\n\nconst _excluded$2 = [\"id\", \"defaultBounds\", \"defaultCenter\", \"defaultZoom\", \"defaultHeading\", \"defaultTilt\", \"reuseMaps\"];\n/**\n * Stores a stack of map-instances for each mapId. Whenever an\n * instance is used, it is removed from the stack while in use,\n * and returned to the stack when the component unmounts.\n * This allows us to correctly implement caching for multiple\n * maps om the same page, while reusing as much as possible.\n *\n * FIXME: while it should in theory be possible to reuse maps solely\n *   based on the mapId (as all other parameters can be changed at\n *   runtime), we don't yet have good enough tracking of options to\n *   reliably unset all the options that have been set.\n */\nclass CachedMapStack {\n  static has(key) {\n    return this.entries[key] && this.entries[key].length > 0;\n  }\n  static pop(key) {\n    if (!this.entries[key]) return null;\n    return this.entries[key].pop() || null;\n  }\n  static push(key, value) {\n    if (!this.entries[key]) this.entries[key] = [];\n    this.entries[key].push(value);\n  }\n}\n/**\n * The main hook takes care of creating map-instances and registering them in\n * the api-provider context.\n * @return a tuple of the map-instance created (or null) and the callback\n *   ref that will be used to pass the map-container into this hook.\n * @internal\n */\nCachedMapStack.entries = {};\nfunction useMapInstance(props, context) {\n  const apiIsLoaded = useApiIsLoaded();\n  const [map, setMap] = useState(null);\n  const [container, containerRef] = useCallbackRef();\n  const cameraStateRef = useTrackedCameraStateRef(map);\n  const {\n      id,\n      defaultBounds,\n      defaultCenter,\n      defaultZoom,\n      defaultHeading,\n      defaultTilt,\n      reuseMaps\n    } = props,\n    mapOptions = _objectWithoutPropertiesLoose(props, _excluded$2);\n  const hasZoom = props.zoom !== undefined || props.defaultZoom !== undefined;\n  const hasCenter = props.center !== undefined || props.defaultCenter !== undefined;\n  if (!defaultBounds && (!hasZoom || !hasCenter)) {\n    console.warn('<Map> component is missing configuration. ' + 'You have to provide zoom and center (via the `zoom`/`defaultZoom` and ' + '`center`/`defaultCenter` props) or specify the region to show using ' + '`defaultBounds`. See ' + 'https://visgl.github.io/react-google-maps/docs/api-reference/components/map#required');\n  }\n  // apply default camera props if available and not overwritten by controlled props\n  if (!mapOptions.center && defaultCenter) mapOptions.center = defaultCenter;\n  if (!mapOptions.zoom && Number.isFinite(defaultZoom)) mapOptions.zoom = defaultZoom;\n  if (!mapOptions.heading && Number.isFinite(defaultHeading)) mapOptions.heading = defaultHeading;\n  if (!mapOptions.tilt && Number.isFinite(defaultTilt)) mapOptions.tilt = defaultTilt;\n  for (const key of Object.keys(mapOptions)) if (mapOptions[key] === undefined) delete mapOptions[key];\n  const savedMapStateRef = useRef();\n  // create the map instance and register it in the context\n  useEffect(() => {\n    if (!container || !apiIsLoaded) return;\n    const {\n      addMapInstance,\n      removeMapInstance\n    } = context;\n    const mapId = props.mapId;\n    const cacheKey = mapId || 'default';\n    let mapDiv;\n    let map;\n    if (reuseMaps && CachedMapStack.has(cacheKey)) {\n      map = CachedMapStack.pop(cacheKey);\n      mapDiv = map.getDiv();\n      container.appendChild(mapDiv);\n      map.setOptions(mapOptions);\n      // detaching the element from the DOM lets the map fall back to its default\n      // size, setting the center will trigger reloading the map.\n      setTimeout(() => map.setCenter(map.getCenter()), 0);\n    } else {\n      mapDiv = document.createElement('div');\n      mapDiv.style.height = '100%';\n      container.appendChild(mapDiv);\n      map = new google.maps.Map(mapDiv, mapOptions);\n    }\n    setMap(map);\n    addMapInstance(map, id);\n    if (defaultBounds) {\n      map.fitBounds(defaultBounds);\n    }\n    // prevent map not rendering due to missing configuration\n    else if (!hasZoom || !hasCenter) {\n      map.fitBounds({\n        east: 180,\n        west: -180,\n        south: -90,\n        north: 90\n      });\n    }\n    // the savedMapState is used to restore the camera parameters when the mapId is changed\n    if (savedMapStateRef.current) {\n      const {\n        mapId: savedMapId,\n        cameraState: savedCameraState\n      } = savedMapStateRef.current;\n      if (savedMapId !== mapId) {\n        map.setOptions(savedCameraState);\n      }\n    }\n    return () => {\n      savedMapStateRef.current = {\n        mapId,\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        cameraState: cameraStateRef.current\n      };\n      // detach the map-div from the dom\n      mapDiv.remove();\n      if (reuseMaps) {\n        // push back on the stack\n        CachedMapStack.push(cacheKey, map);\n      } else {\n        // remove all event-listeners to minimize the possibility of memory-leaks\n        google.maps.event.clearInstanceListeners(map);\n      }\n      setMap(null);\n      removeMapInstance(id);\n    };\n  },\n  // some dependencies are ignored in the list below:\n  //  - defaultBounds and the default* camera props will only be used once, and\n  //    changes should be ignored\n  //  - mapOptions has special hooks that take care of updating the options\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  [container, apiIsLoaded, id, props.mapId]);\n  return [map, containerRef, cameraStateRef];\n}\n\nconst GoogleMapsContext = React.createContext(null);\nconst Map = props => {\n  const {\n    children,\n    id,\n    className,\n    style\n  } = props;\n  const context = useContext(APIProviderContext);\n  const loadingStatus = useApiLoadingStatus();\n  if (!context) {\n    throw new Error('<Map> can only be used inside an <ApiProvider> component.');\n  }\n  const [map, mapRef, cameraStateRef] = useMapInstance(props, context);\n  useMapCameraParams(map, cameraStateRef, props);\n  useMapEvents(map, props);\n  useMapOptions(map, props);\n  const isDeckGlControlled = useDeckGLCameraUpdate(map, props);\n  const isControlledExternally = !!props.controlled;\n  // disable interactions with the map for externally controlled maps\n  useEffect(() => {\n    if (!map) return;\n    // fixme: this doesn't seem to belong here (and it's mostly there for convenience anyway).\n    //   The reasoning is that a deck.gl canvas will be put on top of the map, rendering\n    //   any default map controls pretty much useless\n    if (isDeckGlControlled) {\n      map.setOptions({\n        disableDefaultUI: true\n      });\n    }\n    // disable all control-inputs when the map is controlled externally\n    if (isDeckGlControlled || isControlledExternally) {\n      map.setOptions({\n        gestureHandling: 'none',\n        keyboardShortcuts: false\n      });\n    }\n    return () => {\n      map.setOptions({\n        gestureHandling: props.gestureHandling,\n        keyboardShortcuts: props.keyboardShortcuts\n      });\n    };\n  }, [map, isDeckGlControlled, isControlledExternally, props.gestureHandling, props.keyboardShortcuts]);\n  // setup a stable cameraOptions object that can be used as dependency\n  const center = props.center ? toLatLngLiteral(props.center) : null;\n  let lat = null;\n  let lng = null;\n  if (center && Number.isFinite(center.lat) && Number.isFinite(center.lng)) {\n    lat = center.lat;\n    lng = center.lng;\n  }\n  const cameraOptions = useMemo(() => {\n    var _lat, _lng, _props$zoom, _props$heading, _props$tilt;\n    return {\n      center: {\n        lat: (_lat = lat) != null ? _lat : 0,\n        lng: (_lng = lng) != null ? _lng : 0\n      },\n      zoom: (_props$zoom = props.zoom) != null ? _props$zoom : 0,\n      heading: (_props$heading = props.heading) != null ? _props$heading : 0,\n      tilt: (_props$tilt = props.tilt) != null ? _props$tilt : 0\n    };\n  }, [lat, lng, props.zoom, props.heading, props.tilt]);\n  // externally controlled mode: reject all camera changes that don't correspond to changes in props\n  useLayoutEffect(() => {\n    if (!map || !isControlledExternally) return;\n    map.moveCamera(cameraOptions);\n    const listener = map.addListener('bounds_changed', () => {\n      map.moveCamera(cameraOptions);\n    });\n    return () => listener.remove();\n  }, [map, isControlledExternally, cameraOptions]);\n  const combinedStyle = useMemo(() => _extends({\n    width: '100%',\n    height: '100%',\n    position: 'relative',\n    // when using deckgl, the map should be sent to the back\n    zIndex: isDeckGlControlled ? -1 : 0\n  }, style), [style, isDeckGlControlled]);\n  const contextValue = useMemo(() => ({\n    map\n  }), [map]);\n  if (loadingStatus === APILoadingStatus.AUTH_FAILURE) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: _extends({\n        position: 'relative'\n      }, className ? {} : combinedStyle),\n      className: className\n    }, /*#__PURE__*/React.createElement(AuthFailureMessage, null));\n  }\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: mapRef,\n    \"data-testid\": 'map',\n    style: className ? undefined : combinedStyle,\n    className: className\n  }, id ? {\n    id\n  } : {}), map ? /*#__PURE__*/React.createElement(GoogleMapsContext.Provider, {\n    value: contextValue\n  }, children) : null);\n};\nMap.deckGLViewProps = true;\n\nconst shownMessages = new Set();\nfunction logErrorOnce(...args) {\n  const key = JSON.stringify(args);\n  if (!shownMessages.has(key)) {\n    shownMessages.add(key);\n    console.error(...args);\n  }\n}\n\n/**\n * Retrieves a map-instance from the context. This is either an instance\n * identified by id or the parent map instance if no id is specified.\n * Returns null if neither can be found.\n */\nconst useMap = (id = null) => {\n  const ctx = useContext(APIProviderContext);\n  const {\n    map\n  } = useContext(GoogleMapsContext) || {};\n  if (ctx === null) {\n    logErrorOnce('useMap(): failed to retrieve APIProviderContext. ' + 'Make sure that the <APIProvider> component exists and that the ' + 'component you are calling `useMap()` from is a sibling of the ' + '<APIProvider>.');\n    return null;\n  }\n  const {\n    mapInstances\n  } = ctx;\n  // if an id is specified, the corresponding map or null is returned\n  if (id !== null) return mapInstances[id] || null;\n  // otherwise, return the closest ancestor\n  if (map) return map;\n  // finally, return the default map instance\n  return mapInstances['default'] || null;\n};\n\nfunction useMapsLibrary(name) {\n  const apiIsLoaded = useApiIsLoaded();\n  const ctx = useContext(APIProviderContext);\n  useEffect(() => {\n    if (!apiIsLoaded || !ctx) return;\n    // Trigger loading the libraries via our proxy-method.\n    // The returned promise is ignored, since importLibrary will update loadedLibraries\n    // list in the context, triggering a re-render.\n    void ctx.importLibrary(name);\n  }, [apiIsLoaded, ctx, name]);\n  return (ctx == null ? void 0 : ctx.loadedLibraries[name]) || null;\n}\n\nfunction setValueForStyles(element, styles, prevStyles) {\n  if (styles != null && typeof styles !== 'object') {\n    throw new Error('The `style` prop expects a mapping from style properties to values, ' + \"not a string. For example, style={{marginRight: spacing + 'em'}} when \" + 'using JSX.');\n  }\n  const elementStyle = element.style;\n  // without `prevStyles`, just set all values\n  if (prevStyles == null) {\n    if (styles == null) return;\n    for (const styleName in styles) {\n      if (!styles.hasOwnProperty(styleName)) continue;\n      setValueForStyle(elementStyle, styleName, styles[styleName]);\n    }\n    return;\n  }\n  // unset all styles in `prevStyles` that aren't in `styles`\n  for (const styleName in prevStyles) {\n    if (prevStyles.hasOwnProperty(styleName) && (styles == null || !styles.hasOwnProperty(styleName))) {\n      // Clear style\n      const isCustomProperty = styleName.indexOf('--') === 0;\n      if (isCustomProperty) {\n        elementStyle.setProperty(styleName, '');\n      } else if (styleName === 'float') {\n        elementStyle.cssFloat = '';\n      } else {\n        elementStyle[styleName] = '';\n      }\n    }\n  }\n  // only assign values from `styles` that are different from `prevStyles`\n  if (styles == null) return;\n  for (const styleName in styles) {\n    const value = styles[styleName];\n    if (styles.hasOwnProperty(styleName) && prevStyles[styleName] !== value) {\n      setValueForStyle(elementStyle, styleName, value);\n    }\n  }\n}\nfunction setValueForStyle(elementStyle, styleName, value) {\n  const isCustomProperty = styleName.indexOf('--') === 0;\n  // falsy values will unset the style property\n  if (value == null || typeof value === 'boolean' || value === '') {\n    if (isCustomProperty) {\n      elementStyle.setProperty(styleName, '');\n    } else if (styleName === 'float') {\n      elementStyle.cssFloat = '';\n    } else {\n      elementStyle[styleName] = '';\n    }\n  }\n  // custom properties can't be directly assigned\n  else if (isCustomProperty) {\n    elementStyle.setProperty(styleName, value);\n  }\n  // numeric values are treated as 'px' unless the style property expects unitless numbers\n  else if (typeof value === 'number' && value !== 0 && !isUnitlessNumber(styleName)) {\n    elementStyle[styleName] = value + 'px'; // Presumes implicit 'px' suffix for unitless numbers\n  }\n  // everything else can just be assigned\n  else {\n    if (styleName === 'float') {\n      elementStyle.cssFloat = value;\n    } else {\n      elementStyle[styleName] = ('' + value).trim();\n    }\n  }\n}\n// CSS properties which accept numbers but are not in units of \"px\".\nconst unitlessNumbers = new Set(['animationIterationCount', 'aspectRatio', 'borderImageOutset', 'borderImageSlice', 'borderImageWidth', 'boxFlex', 'boxFlexGroup', 'boxOrdinalGroup', 'columnCount', 'columns', 'flex', 'flexGrow', 'flexPositive', 'flexShrink', 'flexNegative', 'flexOrder', 'gridArea', 'gridRow', 'gridRowEnd', 'gridRowSpan', 'gridRowStart', 'gridColumn', 'gridColumnEnd', 'gridColumnSpan', 'gridColumnStart', 'fontWeight', 'lineClamp', 'lineHeight', 'opacity', 'order', 'orphans', 'scale', 'tabSize', 'widows', 'zIndex', 'zoom', 'fillOpacity',\n// SVG-related properties\n'floodOpacity', 'stopOpacity', 'strokeDasharray', 'strokeDashoffset', 'strokeMiterlimit', 'strokeOpacity', 'strokeWidth']);\nfunction isUnitlessNumber(name) {\n  return unitlessNumbers.has(name);\n}\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/**\n * Internally used to bind events to Maps JavaScript API objects.\n * @internal\n */\nfunction useMapsEventListener(target, name, callback) {\n  useEffect(() => {\n    if (!target || !name || !callback) return;\n    const listener = google.maps.event.addListener(target, name, callback);\n    return () => listener == null ? void 0 : listener.remove();\n  }, [target, name, callback]);\n}\n\n/**\n * Internally used to copy values from props into API-Objects\n * whenever they change.\n *\n * @example\n *   usePropBinding(marker, 'position', position);\n *\n * @internal\n */\nfunction usePropBinding(object, prop, value) {\n  useEffect(() => {\n    if (!object) return;\n    object[prop] = value;\n  }, [object, prop, value]);\n}\n\n/* eslint-disable complexity */\n/**\n * Copy of the `google.maps.CollisionBehavior` constants.\n * They have to be duplicated here since we can't wait for the maps API to load to be able to use them.\n */\nconst CollisionBehavior = {\n  REQUIRED: 'REQUIRED',\n  REQUIRED_AND_HIDES_OPTIONAL: 'REQUIRED_AND_HIDES_OPTIONAL',\n  OPTIONAL_AND_HIDES_LOWER_PRIORITY: 'OPTIONAL_AND_HIDES_LOWER_PRIORITY'\n};\nconst AdvancedMarkerContext = React.createContext(null);\nfunction useAdvancedMarker(props) {\n  const [marker, setMarker] = useState(null);\n  const [contentContainer, setContentContainer] = useState(null);\n  const prevStyleRef = useRef(null);\n  const map = useMap();\n  const markerLibrary = useMapsLibrary('marker');\n  const {\n    children,\n    className,\n    style,\n    onClick,\n    onDrag,\n    onDragStart,\n    onDragEnd,\n    collisionBehavior,\n    clickable,\n    draggable,\n    position,\n    title,\n    zIndex\n  } = props;\n  const numChildren = Children.count(children);\n  // create an AdvancedMarkerElement instance and add it to the map once available\n  useEffect(() => {\n    if (!map || !markerLibrary) return;\n    const newMarker = new markerLibrary.AdvancedMarkerElement();\n    newMarker.map = map;\n    setMarker(newMarker);\n    // create the container for marker content if there are children\n    let contentElement = null;\n    if (numChildren > 0) {\n      contentElement = document.createElement('div');\n      newMarker.content = contentElement;\n      setContentContainer(contentElement);\n    }\n    return () => {\n      var _contentElement;\n      newMarker.map = null;\n      (_contentElement = contentElement) == null || _contentElement.remove();\n      setMarker(null);\n      setContentContainer(null);\n    };\n  }, [map, markerLibrary, numChildren]);\n  // update className and styles of marker.content element\n  usePropBinding(contentContainer, 'className', className != null ? className : '');\n  useEffect(() => {\n    if (!contentContainer) return;\n    setValueForStyles(contentContainer, style || null, prevStyleRef.current);\n    prevStyleRef.current = style || null;\n  }, [contentContainer, className, style]);\n  // copy other props\n  usePropBinding(marker, 'position', position);\n  usePropBinding(marker, 'title', title != null ? title : '');\n  usePropBinding(marker, 'zIndex', zIndex);\n  usePropBinding(marker, 'collisionBehavior', collisionBehavior);\n  // set gmpDraggable from props (when unspecified, it's true if any drag-event\n  // callbacks are specified)\n  useEffect(() => {\n    if (!marker) return;\n    if (draggable !== undefined) marker.gmpDraggable = draggable;else if (onDrag || onDragStart || onDragEnd) marker.gmpDraggable = true;else marker.gmpDraggable = false;\n  }, [marker, draggable, onDrag, onDragEnd, onDragStart]);\n  // set gmpClickable from props (when unspecified, it's true if the onClick event\n  // callback is specified)\n  useEffect(() => {\n    if (!marker) return;\n    if (clickable !== undefined) marker.gmpClickable = clickable;else if (onClick) marker.gmpClickable = true;else marker.gmpClickable = false;\n  }, [marker, clickable, onClick]);\n  useMapsEventListener(marker, 'click', onClick);\n  useMapsEventListener(marker, 'drag', onDrag);\n  useMapsEventListener(marker, 'dragstart', onDragStart);\n  useMapsEventListener(marker, 'dragend', onDragEnd);\n  return [marker, contentContainer];\n}\nconst AdvancedMarker = forwardRef((props, ref) => {\n  const {\n    children\n  } = props;\n  const [marker, contentContainer] = useAdvancedMarker(props);\n  const advancedMarkerContextValue = useMemo(() => marker ? {\n    marker\n  } : null, [marker]);\n  useImperativeHandle(ref, () => marker, [marker]);\n  if (!contentContainer) return null;\n  return /*#__PURE__*/React.createElement(AdvancedMarkerContext.Provider, {\n    value: advancedMarkerContextValue\n  }, createPortal(children, contentContainer));\n});\nfunction useAdvancedMarkerRef() {\n  const [marker, setMarker] = useState(null);\n  const refCallback = useCallback(m => {\n    setMarker(m);\n  }, []);\n  return [refCallback, marker];\n}\n\nconst _excluded$1 = [\"children\", \"style\", \"className\", \"pixelOffset\", \"anchor\", \"shouldFocus\", \"onClose\", \"onCloseClick\"];\n/**\n * Component to render an Info Window with the Maps JavaScript API\n */\nconst InfoWindow = props => {\n  const {\n      // content options\n      children,\n      style,\n      className,\n      pixelOffset,\n      // open options\n      anchor,\n      shouldFocus,\n      // events\n      onClose,\n      onCloseClick\n    } = props,\n    infoWindowOptions = _objectWithoutPropertiesLoose(props, _excluded$1);\n  // ## create infowindow instance once the mapsLibrary is available.\n  const mapsLibrary = useMapsLibrary('maps');\n  const [infoWindow, setInfoWindow] = useState(null);\n  const [contentContainer, setContentContainer] = useState(null);\n  useEffect(() => {\n    if (!mapsLibrary) return;\n    if (pixelOffset) {\n      infoWindowOptions.pixelOffset = new google.maps.Size(pixelOffset[0], pixelOffset[1]);\n    }\n    // intentionally shadowing the state variables here\n    const infoWindow = new google.maps.InfoWindow(infoWindowOptions);\n    const contentContainer = document.createElement('div');\n    infoWindow.setContent(contentContainer);\n    setInfoWindow(infoWindow);\n    setContentContainer(contentContainer);\n    // cleanup: remove infoWindow, all event listeners and contentElement\n    return () => {\n      google.maps.event.clearInstanceListeners(infoWindow);\n      infoWindow.close();\n      contentContainer.remove();\n      setInfoWindow(null);\n      setContentContainer(null);\n    };\n  },\n  // `infoWindowOptions` is missing from dependencies:\n  //\n  // We don't want to re-create the infowindow instance\n  // when the options change.\n  // Updating the options is handled in the useEffect below.\n  //\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  [mapsLibrary]);\n  // ## update className and styles for `contentContainer`\n  // stores previously applied style properties, so they can be removed when unset\n  const prevStyleRef = useRef(null);\n  useEffect(() => {\n    if (!contentContainer) return;\n    setValueForStyles(contentContainer, style || null, prevStyleRef.current);\n    prevStyleRef.current = style || null;\n    if (className !== contentContainer.className) contentContainer.className = className || '';\n  }, [contentContainer, className, style]);\n  // ## update options\n  useDeepCompareEffect(() => {\n    if (!infoWindow) return;\n    if (pixelOffset) {\n      infoWindowOptions.pixelOffset = new google.maps.Size(pixelOffset[0], pixelOffset[1]);\n    }\n    infoWindow.setOptions(infoWindowOptions);\n  },\n  // dependency `infoWindow` isn't needed since options are passed to the constructor\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  [infoWindowOptions]);\n  // ## bind event handlers\n  useMapsEventListener(infoWindow, 'close', onClose);\n  useMapsEventListener(infoWindow, 'closeclick', onCloseClick);\n  // ## open info window when content and map are available\n  const map = useMap();\n  useEffect(() => {\n    // `anchor === null` means an anchor is defined but not ready yet.\n    if (!contentContainer || !infoWindow || anchor === null) return;\n    const openOptions = {\n      map\n    };\n    if (anchor) {\n      openOptions.anchor = anchor;\n    }\n    if (shouldFocus !== undefined) {\n      openOptions.shouldFocus = shouldFocus;\n    }\n    infoWindow.open(openOptions);\n  }, [infoWindow, contentContainer, anchor, map, shouldFocus]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, contentContainer !== null && createPortal(children, contentContainer));\n};\n\n/**\n * Copy of the `google.maps.ControlPosition` constants.\n * They have to be duplicated here since we can't wait for the maps API to load to be able to use them.\n */\nconst ControlPosition = {\n  TOP_LEFT: 1,\n  TOP_CENTER: 2,\n  TOP: 2,\n  TOP_RIGHT: 3,\n  LEFT_CENTER: 4,\n  LEFT_TOP: 5,\n  LEFT: 5,\n  LEFT_BOTTOM: 6,\n  RIGHT_TOP: 7,\n  RIGHT: 7,\n  RIGHT_CENTER: 8,\n  RIGHT_BOTTOM: 9,\n  BOTTOM_LEFT: 10,\n  BOTTOM_CENTER: 11,\n  BOTTOM: 11,\n  BOTTOM_RIGHT: 12,\n  CENTER: 13,\n  BLOCK_START_INLINE_START: 14,\n  BLOCK_START_INLINE_CENTER: 15,\n  BLOCK_START_INLINE_END: 16,\n  INLINE_START_BLOCK_CENTER: 17,\n  INLINE_START_BLOCK_START: 18,\n  INLINE_START_BLOCK_END: 19,\n  INLINE_END_BLOCK_START: 20,\n  INLINE_END_BLOCK_CENTER: 21,\n  INLINE_END_BLOCK_END: 22,\n  BLOCK_END_INLINE_START: 23,\n  BLOCK_END_INLINE_CENTER: 24,\n  BLOCK_END_INLINE_END: 25\n};\nconst MapControl = ({\n  children,\n  position\n}) => {\n  const controlContainer = useMemo(() => document.createElement('div'), []);\n  const map = useMap();\n  useEffect(() => {\n    if (!map) return;\n    const controls = map.controls[position];\n    controls.push(controlContainer);\n    return () => {\n      const controlsArray = controls.getArray();\n      // controlsArray could be undefined if the map is in an undefined state (e.g. invalid API-key, see #276\n      if (!controlsArray) return;\n      const index = controlsArray.indexOf(controlContainer);\n      controls.removeAt(index);\n    };\n  }, [controlContainer, map, position]);\n  return createPortal(children, controlContainer);\n};\n\nconst _excluded = [\"onClick\", \"onDrag\", \"onDragStart\", \"onDragEnd\", \"onMouseOver\", \"onMouseOut\"];\nfunction useMarker(props) {\n  const [marker, setMarker] = useState(null);\n  const map = useMap();\n  const {\n      onClick,\n      onDrag,\n      onDragStart,\n      onDragEnd,\n      onMouseOver,\n      onMouseOut\n    } = props,\n    markerOptions = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    position,\n    draggable\n  } = markerOptions;\n  // create marker instance and add to the map once the map is available\n  useEffect(() => {\n    if (!map) {\n      if (map === undefined) console.error('<Marker> has to be inside a Map component.');\n      return;\n    }\n    const newMarker = new google.maps.Marker(markerOptions);\n    newMarker.setMap(map);\n    setMarker(newMarker);\n    return () => {\n      newMarker.setMap(null);\n      setMarker(null);\n    };\n    // We do not want to re-render the whole marker when the options change.\n    // Marker options update is handled in a useEffect below.\n    // Excluding markerOptions from dependency array on purpose here.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [map]);\n  // attach and re-attach event-handlers when any of the properties change\n  useEffect(() => {\n    if (!marker) return;\n    const m = marker;\n    // Add event listeners\n    const gme = google.maps.event;\n    if (onClick) gme.addListener(m, 'click', onClick);\n    if (onDrag) gme.addListener(m, 'drag', onDrag);\n    if (onDragStart) gme.addListener(m, 'dragstart', onDragStart);\n    if (onDragEnd) gme.addListener(m, 'dragend', onDragEnd);\n    if (onMouseOver) gme.addListener(m, 'mouseover', onMouseOver);\n    if (onMouseOut) gme.addListener(m, 'mouseout', onMouseOut);\n    marker.setDraggable(Boolean(draggable));\n    return () => {\n      gme.clearInstanceListeners(m);\n    };\n  }, [marker, draggable, onClick, onDrag, onDragStart, onDragEnd, onMouseOver, onMouseOut]);\n  // update markerOptions (note the dependencies aren't properly checked\n  // here, we just assume that setOptions is smart enough to not waste a\n  // lot of time updating values that didn't change)\n  useEffect(() => {\n    if (!marker) return;\n    if (markerOptions) marker.setOptions(markerOptions);\n  }, [marker, markerOptions]);\n  // update position when changed\n  useEffect(() => {\n    // Should not update position when draggable\n    if (draggable || !position || !marker) return;\n    marker.setPosition(position);\n  }, [draggable, position, marker]);\n  return marker;\n}\n/**\n * Component to render a marker on a map\n */\nconst Marker = forwardRef((props, ref) => {\n  const marker = useMarker(props);\n  useImperativeHandle(ref, () => marker, [marker]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null);\n});\nfunction useMarkerRef() {\n  const [marker, setMarker] = useState(null);\n  const refCallback = useCallback(m => {\n    setMarker(m);\n  }, []);\n  return [refCallback, marker];\n}\n\n/**\n * Component to configure the appearance of an AdvancedMarker\n */\nconst Pin = props => {\n  var _useContext;\n  const advancedMarker = (_useContext = useContext(AdvancedMarkerContext)) == null ? void 0 : _useContext.marker;\n  const glyphContainer = useMemo(() => document.createElement('div'), []);\n  // Create Pin View instance\n  useEffect(() => {\n    if (!advancedMarker) {\n      if (advancedMarker === undefined) {\n        console.error('The <Pin> component can only be used inside <AdvancedMarker>.');\n      }\n      return;\n    }\n    if (props.glyph && props.children) {\n      logErrorOnce('The <Pin> component only uses children to render the glyph if both the glyph property and children are present.');\n    }\n    if (Children.count(props.children) > 1) {\n      logErrorOnce('Passing multiple children to the <Pin> component might lead to unexpected results.');\n    }\n    const pinViewOptions = _extends({}, props);\n    const pinElement = new google.maps.marker.PinElement(pinViewOptions);\n    // Set glyph to glyph container if children are present (rendered via portal).\n    // If both props.glyph and props.children are present, props.children takes priority.\n    if (props.children) {\n      pinElement.glyph = glyphContainer;\n    }\n    // Set content of Advanced Marker View to the Pin View element\n    advancedMarker.content = pinElement.element;\n  }, [advancedMarker, glyphContainer, props]);\n  return createPortal(props.children, glyphContainer);\n};\n\nconst mapLinear = (x, a1, a2, b1, b2) => b1 + (x - a1) * (b2 - b1) / (a2 - a1);\nconst getMapMaxTilt = zoom => {\n  if (zoom <= 10) {\n    return 30;\n  }\n  if (zoom >= 15.5) {\n    return 67.5;\n  }\n  // range [10...14]\n  if (zoom <= 14) {\n    return mapLinear(zoom, 10, 14, 30, 45);\n  }\n  // range [14...15.5]\n  return mapLinear(zoom, 14, 15.5, 45, 67.5);\n};\n/**\n * Function to limit the tilt range of the Google map when updating the view state\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst limitTiltRange = ({\n  viewState\n}) => {\n  const pitch = viewState.pitch;\n  const gmZoom = viewState.zoom + 1;\n  const maxTilt = getMapMaxTilt(gmZoom);\n  return _extends({}, viewState, {\n    fovy: 25,\n    pitch: Math.min(maxTilt, pitch)\n  });\n};\n\nexport { APILoadingStatus, APIProvider, APIProviderContext, AdvancedMarker, AdvancedMarkerContext, CollisionBehavior, ControlPosition, GoogleMapsContext, InfoWindow, Map, MapControl, Marker, Pin, isLatLngLiteral, latLngEquals, limitTiltRange, toLatLngLiteral, useAdvancedMarkerRef, useApiIsLoaded, useApiLoadingStatus, useMap, useMapsLibrary, useMarkerRef };\n//# sourceMappingURL=index.modern.mjs.map\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { registerPlugin } from '@wordpress/plugins';\nimport {\n\tModal,\n\tRadioControl,\n\tSelectControl,\n\tTextControl,\n} from '@wordpress/components';\nimport { useState, useCallback, useEffect, useRef } from '@wordpress/element';\nimport { PluginPostPublishPanel, PluginSidebarMoreMenuItem, PluginMoreMenuItem, PluginSidebar, PluginDocumentSettingPanel} from '@wordpress/edit-post';\nimport SECRET_KEY from './secrets.js';\n\n\n/* Tutorial here https://developers.google.com/maps/documentation/javascript/examples/rgm-autocomplete & here\nhttps://developers.google.com/maps/documentation/javascript/examples/rgm-autocomplete#maps_rgm_autocomplete-javascript */\n// import {APIProvider, Map, AdvancedMarker, Marker} from '@vis.gl/react-google-maps';\nimport {\n\tAPIProvider,\n\tControlPosition,\n\tMapControl,\n\tAdvancedMarker,\n\tMap,\n\tuseMap,\n\tuseMapsLibrary,\n\tuseAdvancedMarkerRef,\n  } from \"@vis.gl/react-google-maps\";\n\n\nimport { useEntityProp} from '@wordpress/core-data';\nimport { dispatch, select } from '@wordpress/data';\nimport { useCommand } from '@wordpress/commands';\nimport { blockMeta, stack, plusCircle, aspectRatio } from '@wordpress/icons';\n/**\n * Internal dependencies\n */\nimport './index.scss';\n\n\n\n/*\nfunction App() {\n  return <Map\n    mapLib={import('mapbox-gl')}\n    initialViewState={{\n      longitude: -100,\n      latitude: 40,\n      zoom: 3.5\n    }}\n    style={{width: 600, height: 400}}\n    mapStyle=\"mapbox://styles/mapbox/streets-v9\"\n  />;\n}\n*/\n\n\n\n/**\n * Toggle the Preset Manager.\n *\n * Adds a sidebar button in the Post Editor and a Command Palette command.\n */\n\n\n/*\n*/\nfunction toggleSidebar (){\n\tconst isOpen = select('core/edit-post').isPluginSidebarOpened('block-development-examples-post-meta-modal-2502fb/geolocation-sidebar-plugin');\n\tconst generalSidebarName = wp.data.select('core/edit-post').getActiveGeneralSidebarName();\n\t// alert(\"Sidebar name: \" + generalSidebarName);\n\n\tif (isOpen) {\n\t\t// alert(\"toggle Sidebar \" + isOpen);\n\t\tdispatch('core/edit-post').openGeneralSidebar('edit-post/document');\n\t} else {\n\t\t// alert(\"toggle Sidebar \" + isOpen);\n\t\tdispatch('core/edit-post').openGeneralSidebar('block-development-examples-post-meta-modal-2502fb/geolocation-sidebar-plugin');\n\t}\n\t\n\t\n}\n\n\nconst SetCenter = (props) => {\n\tconst map = useMap();\n\tconst [ meta, setMeta ] = useEntityProp( 'postType', 'post', 'meta' );\n\tconst [ isStreetView, setisStreetView ] = useState(false);\n\t// const streetView = useMapsLibrary(\"streetView\");\n\n\tconst getCenter = (click) => {\n\t\t// Get Map Centerpoint\n\t\tlet activeCenter = { lat: map.center.lat(), lng: map.center.lng()};\n\n\t\t// Use the Streetview location when Streetview is visible\n\t\tif(map.streetView.visible){\n\t\t\tactiveCenter = { lat: map.streetView.position.lat(), lng: map.streetView.position.lng()};\n\t\t}\n\n\t\tsetisStreetView(map.streetView.visible ? true : false);\n\n\n\t\tconsole.log(\"map was\", map);\n\t\tconsole.log(\"center was\", activeCenter);\n\n\t\t// Set Meta\n\t\tsetMeta( {\n\t\t\t...meta,\n\t\t\tgeo_latitude: activeCenter.lat,\n\t\t\tgeo_longitude:  activeCenter.lng,\n\t\t});\n\n\t\t// Set Map Center\n\t\tmap.setCenter(activeCenter);\n\n\t}\n\t\n\treturn(\n\t\t<div className=\"center-control\">\n\t\t\t{/* {JSON.stringify(props.position)} */}\n\t\t\t\t<button  onClick={getCenter}>Set Position</button>\n\t\t</div>\n\t);\n}\n\n\n//   Map Handler\nconst MapHandler = ({ place, marker }) => {\n\tconst map = useMap();\n\n\n\tuseEffect(() => {\n\t  if (!map || !place || !marker) return;\n  \n\t  if (place.geometry?.viewport) {\n\t\tmap.fitBounds(place.geometry?.viewport);\n\t  }\n  \n\t  marker.position = place.geometry?.location;\n\t}, [map, place, marker]);\n\n\treturn null;\n  };\n  \n\t//   Place Autocomplete\n  const PlaceAutocomplete = ({ onPlaceSelect }) => {\n\tconst [placeAutocomplete, setPlaceAutocomplete] = useState(null);\n\tconst inputRef = useRef(null);\n\tconst places = useMapsLibrary(\"places\");\n\t\n\tconst [ meta, setMeta ] = useEntityProp( 'postType', 'post', 'meta' );\n\tconst map = useMap();\n\n\t// Change\n\tuseEffect(() => {\n\n\t\tconsole.log(\"places changed\");\n\t\tif (!places || !inputRef.current) return;\n\t\n\t\tconst options = {\n\t\t\tfields: [\"geometry\", \"name\", \"formatted_address\"],\n\t\t};\n\t\t// const results = new places.Autocomplete(inputRef.current, options);\n\t\t// const results = new google.maps.places.PlaceAutocompleteElement();\n\t\t\n\t\t// console.log(\"results \", results);\n\n\t  \tsetPlaceAutocomplete(new places.Autocomplete(inputRef.current, options));\n\t}, [places]);\n\n\n\t// Change\n\tuseEffect(() => {\n\t\tconsole.log(\"onPlaceSelect, placeAutocomplete changed\");\n\n\t\tif (!placeAutocomplete) return;\n\t\n\t\tplaceAutocomplete.addListener(\"place_changed\", () => {\n\n\t\t\tconsole.log(\"also, \tplaceAutocomplete.getPlace() occurred\", placeAutocomplete.getPlace());\n\t\t\tonPlaceSelect(placeAutocomplete.getPlace());\n\n\t\t\tconst place = placeAutocomplete.getPlace();\n\n\t\t\tconst setmeta = setMeta( {\n\t\t\t\t...meta,\n\t\t\t\tgeo_latitude: place.geometry.location.lat(),\n\t\t\t\tgeo_longitude:  place.geometry.location.lng(),\n\t\t\t} )\n\n\t\t\t// Reset Center\n\t\t\tif (map) { map.fitBounds(place.geometry?.viewport); }\n\n\t\t});\n\t}, [onPlaceSelect, placeAutocomplete]);\n\n\n\treturn (\n\t  <div className=\"autocomplete-container\">\n\t\t<input ref={inputRef} />\n\t  </div>\n\t);\n  };\n\nfunction MetaModalManager() {\n\tconst [ isModalOpen, setModalOpen ] = useState( false );\n\tconst [ meta, setMeta ] = useEntityProp( 'postType', 'post', 'meta' );\n\tconst [ selectedPlace, setSelectedPlace] = useState(null);\n\t// const [ ideal, SetCenter] = useState(null);\n\n\t\n\t// SetCenter\n\tconst [ markerRef, marker] = useAdvancedMarkerRef();\n\n\tconsole.log(\"selectedPlace is: \", selectedPlace);\n\n\t// const [ lat, setLat] = useState(meta?.geo_latitude || \"61.2176\");\n\t// const [ lng, setLng] = useState(meta?.geo_latitude || \"-149.8997\");\n\t// const { dispatch, select } = wp.data;\n\n\t// Register a command for the Command Palette.\n\tuseCommand( {\n\t\tname: 'manage-post-geolocation',\n\t\tlabel: __( 'Edit Geolocation data', 'block-development-examples' ),\n\t\ticon: plusCircle,\n\t\tcallback: () => setModalOpen( true ),\n\t\tcontext: 'block-editor',\n\t} );\n\n\t/*\t*/\n\tuseCommand( {\n\t\tname: 'view-post-geolocation',\n\t\tlabel: __( 'Toggle Geolocation Panel', 'block-development-examples' ),\n\t\ticon: plusCircle,\n\t\tcallback: () => toggleSidebar(),\n\t\tcontext: 'block-editor',\n\t} );\n\n\tconst alaska = {lat: 61.2176, lng: -149.8997};\n\tconst position = {lat: meta?.geo_latitude || alaska.lat, lng: meta?.geo_longitude || alaska.lng};\n\n\tconst handleDragChange = (ev) => {\n\n\t\tconsole.log('camera changed: ', ev);\n\n\t\tconst lat = ev.latLng.lat();\n\t\tconst lng =  ev.latLng.lng();\n\n\t\tsetMeta( {\n\t\t\t...meta,\n\t\t\tgeo_latitude: lat,\n\t\t\tgeo_longitude: lng,\n\t\t} )\n\t\t// setSelectedPlace(ev);\n\t};\n\n\tconst handleRightClick = (ev) => {\n\n\t\tconsole.log('right click!', ev);\n\n\t\tconst lat = ev.detail.latLng.lat;\n\t\tconst lng =  ev.detail.latLng.lng;\n\n\t\tsetMeta( {\n\t\t\t...meta,\n\t\t\tgeo_latitude: lat,\n\t\t\tgeo_longitude: lng,\n\t\t} )\n\t\t// setSelectedPlace(ev);\n\t};\n\n\treturn (\n\t\t<>\n\n\t\t\t<PluginSidebarMoreMenuItem target=\"geolocation-sidebar-plugin\" icon=\"admin-site-alt\">\n\t\t\t \tGeolocation Data\n\t\t\t</PluginSidebarMoreMenuItem>\n\t\t\n\t\t\t{/* Sidebar Content */}\n\t\t\t<PluginSidebar name=\"geolocation-sidebar-plugin\" icon=\"admin-site-alt\" title=\"Geolocation\">\n\t\t\t\t{/* Text Search \n\t\t\t\t<TextControl\n\t\t\t\t\tlabel={ __( 'Text Field', 'block-development-examples') }\n\t\t\t\t\tvalue={ meta?.geo_title || '' }\n\t\t\t\t\n\t\t\t\t/>*/}\n\t\t\t\t<>\n\t\t\t\t<h3>Current Geodata:</h3>\t\t\t\t\t\n\t\t\t\t<ul>\n\t\t\t\t\t{/* <li>Title: {meta?.geo_title}</li> */}\n\t\t\t\t\t<li>Address? {meta?.geo_address}</li>\n\t\t\t\t\t<li>Latitude? {meta?.geo_latitude}</li>\n\t\t\t\t\t<li>Longitude? {meta?.geo_longitude}</li>\n\t\t\t\t\t<li>Public? {meta?.geo_public}</li>\n\t\t\n\t\t\t\t</ul>\n\t\t\t\t<button onClick={ () => setModalOpen( true ) }>Edit</button>\n\t\t\t\t</>\n\t\t\t</PluginSidebar>\n\t\t\t\n\t\t\t{/* Expanded Overlay View */}\n\t\t\t{ isModalOpen && (\n\t\t\t\t<Modal\n\t\t\t\t\tclassName=\"post_meta_modal_2502fb_container\"\n\t\t\t\t\ttitle={ __(\n\t\t\t\t\t\t'Edit Geolocation Data',\n\t\t\t\t\t\t'block-development-examples'\n\t\t\t\t\t) }\n\t\t\t\t\tonRequestClose={ () => setModalOpen( false ) }\n\t\t\t\t\tisFullScreen\n\t\t\t\t\t// size='large'\n\t\t\t\t>\n\n\t\t\t\t\t<APIProvider apiKey={SECRET_KEY} version='3'>\n\t\t\t\t\t<div className=\"modal\">\n\n\t\t\t\t\t\t{/* Controls  */}\n\t\t\t\t\t\t<div className=\"modal__controls\">\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t<li>Latitude? {meta?.geo_latitude}</li>\n\t\t\t\t\t\t\t\t<li>Longitude? {meta?.geo_longitude}</li>\n\t\t\t\t\t\t\t</ul>\n\n\t\t\t\t\t\t\t<TextControl\n\t\t\t\t\t\t\t\tlabel={ __(\n\t\t\t\t\t\t\t\t\t'Geo Address',\n\t\t\t\t\t\t\t\t\t'block-development-examples'\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\tvalue={ meta?.geo_address || '' }\n\t\t\t\t\t\t\t\tonChange={ ( newValue ) =>\n\t\t\t\t\t\t\t\t\tsetMeta({ ...meta, geo_addres: newValue, })\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<TextControl\n\t\t\t\t\t\t\t\tlabel={ __(\n\t\t\t\t\t\t\t\t\t'Geo Address',\n\t\t\t\t\t\t\t\t\t'block-development-examples'\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\tvalue={ meta?.geo_address || '' }\n\t\t\t\t\t\t\t\tonChange={ ( newValue ) =>\n\t\t\t\t\t\t\t\t\tsetMeta({ ...meta, geo_address: newValue, })\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<RadioControl\n\t\t\t\t\t\t\t\tlabel={ __('Radio Field', 'block-development-examples') }\n\t\t\t\t\t\t\t\tselected={ meta?.geo_public || ''}\n\t\t\t\t\t\t\t\toptions={[\n\t\t\t\t\t\t\t\t\t{ label: 'Visible', value: true, },\n\t\t\t\t\t\t\t\t\t{ label: 'Hidden', value: false, },\n\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\tonChange={ ( newValue ) => setMeta({ ...meta, geo_public: newValue, }) }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t{/* Set Center */}\n\t\t\t\t\t\t\t<SetCenter />\n\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{/* Map */}\n\t\t\t\t\t\t<div className=\"modal__map\">\n\n\t\t\t\t\t\t\t{/* <div style={{position:\"relative\"}} className='modal__ratio'> */}\n\t\t\t\t\t\t\t\t{/* Google API Boundary */}\n\t\t\t\t\t\t\n\n\t\t\t\t\t\t\t\t{/* Map with Advanced Marker */}\n\t\t\t\t\t\t\t\t{/*  disableDefaultUI={true} */}\n\t\t\t\t\t\t\t\t<Map \n\t\t\t\t\t\t\t\t\tmapId=\"geocoder_tool\" \n\t\t\t\t\t\t\t\t\tdefaultCenter={position} \n\t\t\t\t\t\t\t\t\tdefaultZoom={13}\n\t\t\t\t\t\t\t\t\tgestureHandling={'greedy'} \n\t\t\t\t\t\t\t\t\tonContextmenu={handleRightClick} \n\t\t\t\t\t\t\t\t\tfullscreenControl={false}\n\t\t\t\t\t\t\t\t\tstreetViewControlOptions={{position: ControlPosition.TOP_RIGHT}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<AdvancedMarker position={position} draggable onDragEnd={handleDragChange}  />\n\t\t\t\t\t\t\t\t</Map>\n\n\t\t\t\t\t\t\t\t{/* AutoSelect Tool */}\n\t\t\t\t\t\t\t\t<MapControl position={ControlPosition.TOP_CENTER}>\n\t\t\t\t\t\t\t\t\t<div className=\"autocomplete-control\">\n\t\t\t\t\t\t\t\t\t\t<PlaceAutocomplete onPlaceSelect={setSelectedPlace} />\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</MapControl>\n\n\t\t\t\t\t\t\t\t{/* Center Control \n\t\t\t\t\t\t\t\t<MapControl position={ControlPosition.BOTTOM_CENTER}>\n\t\t\t\t\t\t\t\t\t<SetCenter />\n\t\t\t\t\t\t\t\t</MapControl>\n\t\t\t\t\t\t\t\t */}\n\n\t\t\t\t\t\t\t\t<SetCenter />\n\t\t\t\t\t\t\t\t<MapHandler place={selectedPlace} marker={marker} />\n\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t{/* </div> */}\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t</div>\n\t\t\t\t\t</APIProvider>\n\t\t\t\t\t\n\t\t\t\t</Modal>\n\t\t\t) }\n\t\t</>\n\t);\n}\n\nregisterPlugin( 'block-development-examples-post-meta-modal-2502fb', {\n\trender: MetaModalManager,\n} );\n"],"names":["secret_key","__","registerPlugin","Modal","RadioControl","SelectControl","TextControl","useState","useCallback","useEffect","useRef","PluginPostPublishPanel","PluginSidebarMoreMenuItem","PluginMoreMenuItem","PluginSidebar","PluginDocumentSettingPanel","SECRET_KEY","APIProvider","ControlPosition","MapControl","AdvancedMarker","Map","useMap","useMapsLibrary","useAdvancedMarkerRef","useEntityProp","dispatch","select","useCommand","blockMeta","stack","plusCircle","aspectRatio","toggleSidebar","isOpen","isPluginSidebarOpened","generalSidebarName","wp","data","getActiveGeneralSidebarName","openGeneralSidebar","SetCenter","props","map","meta","setMeta","isStreetView","setisStreetView","getCenter","click","activeCenter","lat","center","lng","streetView","visible","position","console","log","geo_latitude","geo_longitude","setCenter","createElement","className","onClick","MapHandler","place","marker","geometry","viewport","fitBounds","location","PlaceAutocomplete","onPlaceSelect","placeAutocomplete","setPlaceAutocomplete","inputRef","places","current","options","fields","Autocomplete","addListener","getPlace","setmeta","ref","MetaModalManager","isModalOpen","setModalOpen","selectedPlace","setSelectedPlace","markerRef","name","label","icon","callback","context","alaska","handleDragChange","ev","latLng","handleRightClick","detail","Fragment","target","title","geo_address","geo_public","onRequestClose","isFullScreen","apiKey","version","value","onChange","newValue","geo_addres","selected","mapId","defaultCenter","defaultZoom","gestureHandling","onContextmenu","fullscreenControl","streetViewControlOptions","TOP_RIGHT","draggable","onDragEnd","TOP_CENTER","render"],"sourceRoot":""}